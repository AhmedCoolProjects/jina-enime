import {
  Container,
  createTheme,
  CssBaseline,
  ThemeProvider,
} from "@mui/material";
import Head from "next/head";
import { useEffect, useMemo } from "react";
import { appAxios } from "../../axios";
import { THEME } from "../../constants";
import {
  changeModeAction,
  loginAction,
  useAppDispatch,
  useAppSelector,
} from "../../store";
import { Footer } from "./Footer";
import { Header } from "./Header";

type props = {
  children: React.ReactNode;
};

export function Layout(props: props) {
  const { children } = props;

  const dispatch = useAppDispatch();
  const isDark = useAppSelector((state) => state.mode.isDark);

  useEffect(() => {
    const isDarkLocal = localStorage.getItem("isDark");
    if (isDarkLocal !== null && isDarkLocal !== `${isDark}`) {
      dispatch(changeModeAction());
    }
    const token = localStorage.getItem("token");
    async function getStudentData(token: string) {
      await appAxios.post("/student/profile").then((res) => {
        if (res.data) {
          dispatch(
            loginAction({
              first_name: res.data.first_name,
              last_name: res.data.last_name,
              email: res.data.email,
              room_number: res.data.room_number,
              token: token,
              _id: res.data._id,
              email_verified: res.data.email_verified,
            })
          );
        }
      });
    }
    if (token) {
      appAxios.defaults.headers.common["Authorization"] = `JWT ${token}`;
      getStudentData(token);
    }
  });

  const theme = useMemo(
    () =>
      createTheme({
        palette: {
          mode: isDark ? "dark" : "light",
          primary: THEME.primary,
          secondary: THEME.secondary,
        },
      }),
    [isDark]
  );
  return (
    <ThemeProvider theme={theme}>
      <CssBaseline />
      <Head>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Container maxWidth="lg">
        <Header />
        {children}
        <Footer />
      </Container>
    </ThemeProvider>
  );
}
